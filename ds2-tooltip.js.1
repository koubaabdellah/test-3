	var isMobile = /Android|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
	// Arrow position function
   var tooltipArrowPos = function () {
      var tooltipPos = $('[data-activate-tooltip]').position();
      if (window.innerWidth <= 479) {
         var left = tooltipPos.left + 31;
      } else {
         var left = tooltipPos.left + 16;
      }
      $('#tooltipArrow').text('.helptext-wrap .helpertext::before {left:' + left + 'px !important;}');
   };

         // Setup component
      $('[data-activate-tooltip]').each(function () {
         var tipTarget = $(this).attr('data-activate-tooltip');
         // Revmoe namespace listener before attach it.
         $(this).off('click.tooltip').on('click.tooltip', function () {
            if ($(this).parent().is('.active')) {
               $('#' + tipTarget).removeAttr('aria-live').css({
                  'display': 'none'
               });
               $(this).removeAttr('aria-describedby');
            } else {
               $('#' + tipTarget).attr({
                  'aria-live': 'polite'
               }).css({
                  'display': 'block'
               });
               $(this).attr({
                  'aria-describedby': tipTarget
               });
               $('<style id= "tooltipArrow" type="text/css"/>').appendTo($('head'));
               tooltipArrowPos();
            }
         });
      });
   

   
      $(window).on("resize", function () {
         if (!!$('[data-activate-tooltip]').length) {
            tooltipArrowPos();
         }
      }).on('resize');

      // TOOLTIP LINK ONCLICK AND FOCUS ********************************************
      $(document)
         .off('click.tooltip.link mouseenter.tooltip.link mouseleave.tooltip.link focus.tooltip.link blur.tooltip.link')
         .on('click.tooltip.link mouseenter.tooltip.link mouseleave.tooltip.link focus.tooltip.link blur.tooltip.link', 'a.icon-tooltip', function (e) {
         var $this = $(this);
         if (e.type == 'mouseenter' && $(this).closest('.tooltip').not('.active')) {
            $('a.icon-tooltip').not(this).attr({
               'aria-expanded': false
            }).closest('.tooltip').removeClass('active activeClick');
            $('.tooltip-onclick, .tooltip-onfocus, .tooltip-onhover').removeClass('active').find('.icon-tooltip').attr({
               'aria-expanded': 'false'
            }).removeClass('active');

            $(this).attr({
               'aria-expanded': true
            }).closest('.tooltip').find('.helpertext').attr({
               'aria-hidden': 'false'
            });
            $(this).closest('.tooltip').addClass('active');
            if(isMobile){
                $(this).closest('.tooltip').addClass('activeClick');
            }
            var
               tipIconPosition = $this.position().left,
               tipIconOffset = $this.offset().left + ($this.width() / 2),
               tooltipCenter = $this.next().find('.helpertext').outerWidth() / 2,
               arrowPosition = $this.find('.arrow').offset().left,
               pagePadLeft = parseInt($('body > .container').css('padding-left')),
               pagePadRight = parseInt($('body > .container').css('padding-right')),
               maxRightPos = parseInt(tipIconOffset + tooltipCenter + pagePadRight),
               maxLeftPos = parseInt(tipIconOffset - tooltipCenter - pagePadLeft),
               tipPosition;

            if ($(window).width() >= '768') {
               if ($this.closest('.modalwrapper').hasClass('active')) {
                  var
                     modalLeft = $this.closest('.modal').offset().left,
                     modalWidth = $this.closest('.modal').innerWidth(),
                     modalRight = $this.closest('.modal').offset().left + $this.closest('.modal').width();
                  modalLeftPad = $this.closest('.modal').find('.modal-body').css('padding-left');
                  modalRightPad = $this.closest('.modal').find('.modal-body').css('padding-right');

                  //if Max Left Position
                  if (tipIconPosition <= 150) {
                     tipIconOffset = parseInt($this.closest('.modal').find('.modal-body').css('padding-left'));
                     $this.next('.tooltip-wrapper').css({
                        'padding-left': modalLeftPad,
                        'padding-right': modalRightPad
                     });
                     $this.next().find('.tooltip-size-control').css({
                        'display': 'flex',
                        'justify-content': 'flex-start',
                        'left': '0'
                     });
                  }
                  // if Max Right Position
                  else if ((tipIconPosition + tooltipCenter) > (modalWidth - (parseInt(modalLeftPad) + parseInt(modalRightPad)))) {
                     tipIconOffset = parseInt($this.closest('.modal').find('.modal-body').css('padding-right'));
                     $this.next('.tooltip-wrapper').css({
                        'display': 'flex',
                        'width': '100%',
                        'justify-content': 'flex-end',
                        'padding-left': pagePadLeft,
                        'padding-right': pagePadRight
                     });
                  } else {
                     $this.next('.tooltip-wrapper').css({
                        'display': 'flex'
                     });
                     $this.next().find('.tooltip-size-control').removeAttr('style').css({
                        'left': tipIconPosition - tooltipCenter + 10
                     });
                  }
               } else {
                  // if Max Left Position
                  if (maxLeftPos < 0) {
                     tipPosition = 0;
                     $('.tooltip-wrapper').css({
                        'display': 'block'
                     });
                  }
                  // if Max Right Position
                  else if (maxRightPos > window.innerWidth) {
                     $('.tooltip-wrapper').css({
                        'display': 'flex',
                        'justify-content': 'flex-end'
                     });
                  }
                  // if in the middle somewhere
                  else {
                     $('.tooltip-wrapper').css({
                        'display': 'block'
                     });
                     tipPosition = tipIconPosition - tooltipCenter + 10;
                  }
                  $this.next().find('.tooltip-size-control').removeAttr('style').css({
                     'left': tipPosition
                  });
               }
            }
         } else if (e.type == 'mouseleave' && $(this).closest('.tooltip').is('.active')) {
            if ($(this).closest('.tooltip').is('.activeClick')) {} else {
               $(this)
                  .attr({
                     'aria-expanded': false
                  })
                  .closest('.tooltip').find('.helpertext').attr({
                     'aria-hidden': 'true',
                     'tabindex': '-1'
                  });
               $(this).closest('.tooltip').removeClass('active');
               $this.next().find('.tooltip-size-control').removeAttr('style');
            }
         } else {
            if (e.type == 'click') {
               if ($(this).closest('.tooltip').is('.activeClick')) {
                  $('a.icon-tooltip').attr({
                     'aria-expanded': false
                  }).closest('.tooltip').removeClass('activeClick active');
                  $('a.icon-tooltip').removeAttr('aria-describedby');
                  e.preventDefault();
               } else {
                  $(this).closest('.tooltip').addClass('activeClick');
                  $(this).attr('aria-describedby', $(this).closest('.tooltip').find('.helpertext').attr('id'));
                  $(this).trigger('mouseenter');
                  e.preventDefault();
               }
            } else {
               $(this).on('keydown', function (e) {
                  if (e.keyCode == '32') {
                     $(this).closest('.tooltip').toggleClass('active');
                     $(this).trigger('click');
                     e.preventDefault();
                  } else if (e.keyCode == '27' && $(this).closest('.tooltip').is('.activeClick')) {
                     $(this).attr({
                        'aria-expanded': false
                     }).closest('.tooltip').removeClass('activeClick active');
                     $(this).removeAttr('aria-describedby');
                     e.preventDefault();
                  }
               });
               e.preventDefault();
            }
         }
         e.preventDefault();
      });

      // TOOLTIP BUTTON INSIDE A TEXT FIELD
      $(document).off('click.tooltip.btn').on('click.tooltip.btn', '.btn.icon-tooltip', function (e) {
         var tipID = $(e.target).closest('.tooltip-onclick').find('.helpertext').attr('id');
         if ($(e.target).closest('.tooltip-onclick').is('.active')) {
            $(e.target).closest('.tooltip-onclick').find('.helpertext').removeAttr('aria-live');
            $(e.target).attr({
               'aria-expanded': 'false'
            }).removeAttr('aria-describedby').closest('.tooltip-onclick').removeClass('active');
         } else {
            $(e.target).closest('.tooltip-onclick').find('.helpertext').attr({
               'aria-live': 'polite'
            });
            $(e.target).attr({
               'aria-expanded': 'true',
               'aria-describedby': tipID
            }).closest('.tooltip-onclick').addClass('active');
         }
      }).off('keydown.tooltip.btn').on('keydown.tooltip.btn', '.btn.icon-tooltip', function (e) {
         if (e.keyCode == '27' && $(this).closest('.tooltip-onclick').hasClass('active')) {
            $(e.target).attr({
               'aria-expanded': 'false'
            }).removeAttr('aria-describedby').closest('.tooltip-onclick').removeClass('active');
            e.preventDefault();
         }
      });
      
      // close all tooltips if clicking something else
      /*$(document).off('click.tooltip.out').on('click.tooltip.out', function (e) {
         var inputField_tooltip = $(e.target).closest('.tooltip-onclick').hasClass('tooltip-onclick') ? 'true' : 'false';
         if (inputField_tooltip == 'true') {
            $('a.icon-tooltip').not(e.target).attr({
               'aria-expanded': false
            }).closest('.tooltip').removeClass('active activeClick');
            $('.tooltip-onclick').not($(e.target).closest('.tooltip-onclick')).removeClass('active');
            e.preventDefault();
         }
         if (inputField_tooltip == 'false') {  if click did NOT happen inside the tooltip 
            $('a.icon-tooltip').not(e.target).attr({
               'aria-expanded': false
            }).closest('.tooltip').removeClass('active activeClick');
            $('.tooltip-onclick').removeClass('active');
            $('.tooltip-onclick').find('.icon-tooltip').attr({
               'aria-expanded': 'false'
            }).removeClass('active');
            $('.helpertext').removeAttr('style');
         }
      });*/

      // CLOSE ALL TOOLTIPS
      /*$(document).off('focusin.tooltip.focusin').on('focusin.tooltip.focusin', function (e) {
         var inputField_tooltip = $(e.target).closest('.tooltip-onclick').find('.helpertext').is(':visible') ? 'true' : 'false';
         if (inputField_tooltip == 'false') {  if focus did NOT happen inside the text field of the tooltip 
            $('.tooltip-onclick').removeClass('active');
            $('.tooltip-onclick').find('.icon-tooltip').attr({
               'aria-expanded': 'false'
            }).removeClass('active');
         }
         if(isMobile){
         $('a.icon-tooltip').not(e.target).attr({
            'aria-expanded': false
         }).closest('.tooltip').removeClass('active activeClick');
         }
      });
      $(document).off('focusout.tooltip.focusout').on('focusout.tooltip.focusout', function (e) {
        if(isMobile){
         $('a.icon-tooltip').attr({
            'aria-expanded': false
         }).closest('.tooltip').removeClass('active activeClick');
        }
      });*/

      // TOOLTIP TRIGGERED AUTOMATICALLY INSIDE A TEXT FIELD and TEXTAREA
      $(document).off('focus.tooltip.onfocus').on('focus.tooltip.onfocus', '.tooltip-onfocus > input, .tooltip-onfocus > textarea', function (e) {
         $('a.icon-tooltip').not(e.target).attr({
            'aria-expanded': false
         }).closest('.tooltip').removeClass('active activeClick');
         $('[class*="tooltip"].active').trigger('click');
         $(this).closest('.tooltip-onfocus').addClass('active');
         $(this).closest('.tooltip-onfocus').find('.helpertext').css('display', 'block').attr({
            'aria-live': 'polite'
         });
      });
      $(document).off('focusout.tooltip.onfocus').on('focusout.tooltip.onfocus', '.tooltip-onfocus > input, .tooltip-onfocus > textarea', function (e) {
         $(this).closest('.tooltip-onfocus').removeClass('active');
         $(this).closest('.tooltip-onfocus').find('.helpertext').css('display', 'none').removeAttr('aria-live');
      });


      // TOOLTIP TRIGGERED ONMOUSEOVER A TEXT FIELD
      $(document).off('mouseenter.tooltip.onhover click.tooltip.onhover').on('mouseenter.tooltip.onhover click.tooltip.onhover', '.tooltip-onhover .icon-tooltip', function (e) {
         $('a.icon-tooltip').not(this).attr({
            'aria-expanded': false
         }).closest('.tooltip').removeClass('active activeClick');
         $('[class*="tooltip"].active').trigger('click');
         $(this).closest('.tooltip-onhover').addClass('active');
         $(this).closest('.tooltip-onhover').find('.helpertext').css('display', 'block').attr({
            'aria-live': 'polite'
         });
      });
      $(document).off('mouseout.tooltip.onhover blur.tooltip.onhover').on('mouseout.tooltip.onhover blur.tooltip.onhover', '.tooltip-onhover .icon-tooltip', function (e) {
         $(this).closest('.tooltip-onhover').removeClass('active');
         $(this).closest('.tooltip-onhover').find('.helpertext').css('display', 'none').removeAttr('aria-live');
      });
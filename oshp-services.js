"use strict";var attOSHP=angular.module("att.oshpservices",["ngResource","att.core"]);attOSHP.constant("OSHPURIs",{orderSummary:{oshpUnauthOrderSummary:"services/resource/orderSearch/unauth/getorder",oshpAuthOrderSummary:"services/resource/orderSearch/auth/getorder",oshpOrderMultiDetailsStubUri:"json/OrderDetailJSON/orderDetail_01.json",oshpOrderSummaryStubUri:"json/ordersummary.json",oshpOrderSummaryC2SStubUri:"json/OrderDetailJSON/orderDetailC2S_01.json",oshpOrderHandoffC2SStubUri:"json/OrderDetailJSON/orderDetailC2S_02.json",oshpOrderHandoffC2SStubUri2:"json/OrderDetailJSON/orderDetailC2S_68818007.json",oshpOrderUpdatePaymentStubUri:"json/OrderDetailJSON/upatepayment.json"},appMarketOrderDetails:{appMarketOrderDetailsNewOrderOneItemStubUri:"json/OrderDetailJSON/appmarketplace/newOrderOneItem.json",appMarketOrderDetailsNewOrderMultipleItemStubUri:"json/OrderDetailJSON/appmarketplace/newOrderMultipleItem.json",appMarketOrderDetailsNewOrderMultipleItemSameStatusStubUri:"json/OrderDetailJSON/appmarketplace/newOrderMultipleItemSameStatus.json",appMarketOrderDetailsChangeProductStubUri:"json/OrderDetailJSON/appmarketplace/changeProduct.json",appMarketOrderDetailsIncreaseQuantityStubUri:"json/OrderDetailJSON/appmarketplace/increaseLicenseQuantity.json",appMarketOrderDetailsDecreaseQuantityStubUri:"json/OrderDetailJSON/appmarketplace/decreaseLicenseQuantity.json",appMarketOrderDetailsCancelSubscriptionStubUri:"json/OrderDetailJSON/appmarketplace/cancelSubscription.json"},orderDetails:{oshpOrderDetails:"services/resources/unauth/myorders/orderDetails",oshpOrderDetailsStubUri:"json/orderDetail.json"},paymentUpdate:{oshpPaymentUpdate:applicationUrls.bestPaymentApiHostUrl+"/best/resources/unauth/payment/orderhub/updateDirectFulfillmentOrder",oshpPaymentUpdateStubUri:"json/OrderDetailJSON/Paymentfailure.json"},orderCancelled:{oshpOrderCancelled:"services/resources/unauth/cancellation/order/ordercancel",oshpOrderCancelledOmni:"services/resources/unauth/cancellation/order/ordercancelomni",oshposhpOrderCancelledStubUri:"json/OrderDetailJSON/cancelfailure.json"},updateConsent:{oshpUpdateConsent:"services/resource/orderSearch/updateconsent",oshpUpdateConsentSuccessStubUri:"json/OrderDetailJSON/updateConsentSuccess.json"},verificationEmail:{oshpSendVerificationEmail:"services/resources/unauth/sendEmailNotification/sendEmail",oshpSendVerificationEmailStubUri:"json/OrderDetailJSON/updateConsentSuccess.json"},captcha:{getcatchaImageURI:"/checkmyorder/services/resources/acceptance/captcha/getImage",iscaptchaNeededURI:"/checkmyorder/services/resources/acceptance/captcha/isCaptchaNeeded",iscaptchaNeededStubURI:"json/Captcha.json"},addZoneEvent:{addZoneEventODSURI:"services/resources/unauth/common/addZoneEventODS/addZoneEvent",addZoneEventODSStubURI:""},bopisStoreData:{bopisStoreDataURI:"https://www.att.com/apis/maps/v2/locator/place/opusid/:storeId.json",addZoneEventODSStubURI:""},customerType:{getcustomerTypeUri:"services/resources/orderSearch/unauth/customerType"},appointmentCalendar:{oshpGetAppointmentCalendarUri:"services/resource/orderSearch/getAppointmentCalendar",oshpGetAppointmentCalendarStubSuccessUri:"json/oshpGetAppointmentCalendar.json",oshpGetAppointmentCalendarStubFailureUri:"json/oshpGetAppointmentCalendarFailure.json"}}),attOSHP.subscriber=function($rootScope,$resource,$q,$log,OSHPURIs,ContentService,$filter){$log.log("entering search constructor"),this.scope=$rootScope,this.log=$log,this.q=$q,this.content=ContentService,this.language="English",this.data=null,this.filter=$filter,this.oshpUnauthOrderSummaryAPI=$resource(OSHPURIs.orderSummary.oshpUnauthOrderSummary),this.oshpAuthOrderSummaryAPI=$resource(OSHPURIs.orderSummary.oshpAuthOrderSummary),this.oshpOrderMultiDetailsAPIStub=$resource(OSHPURIs.orderSummary.oshpOrderMultiDetailsStubUri),this.oshpOrderSummaryAPIStub=$resource(OSHPURIs.orderSummary.oshpOrderSummaryStubUri),this.oshpOrderSummaryC2SAPIStub=$resource(OSHPURIs.orderSummary.oshpOrderSummaryC2SStubUri),this.oshpOrderHandoffC2SStubUri=$resource(OSHPURIs.orderSummary.oshpOrderHandoffC2SStubUri),this.oshpOrderHandoffC2SStubUri2=$resource(OSHPURIs.orderSummary.oshpOrderHandoffC2SStubUri2),this.oshpOrderDetailsAPI=$resource(OSHPURIs.orderDetails.oshpOrderDetails),this.oshpOrderDetailsAPIStub=$resource(OSHPURIs.orderDetails.oshpOrderDetailsStubUri),this.oshpPaymentUpdateAPI=$resource(OSHPURIs.paymentUpdate.oshpPaymentUpdate),this.oshpPaymentUpdateAPIStub=$resource(OSHPURIs.paymentUpdate.oshpPaymentUpdateStubUri),this.oshpOrderCancelledAPI=$resource(OSHPURIs.orderCancelled.oshpOrderCancelled),this.oshpOrderCancelledAPIStub=$resource(OSHPURIs.orderCancelled.oshposhpOrderCancelledStubUri),this.oshpOrderCancelledAPIOmni=$resource(OSHPURIs.orderCancelled.oshpOrderCancelledOmni),this.oshpOrderCancelledAPIErrorStub=$resource(OSHPURIs.orderCancelled.oshposhpOrderCancelledStuberrorUri),this.oshpUpdateConsentAPI=$resource(OSHPURIs.updateConsent.oshpUpdateConsent),this.oshpUpdateConsentAPISuccessStub=$resource(OSHPURIs.updateConsent.oshpUpdateConsentSuccessStubUri),this.oshpSendEmailVerificationAPI=$resource(OSHPURIs.verificationEmail.oshpSendVerificationEmail),this.oshpSendEmailVerificationAPIStub=$resource(OSHPURIs.verificationEmail.oshpSendVerificationEmailStubUri),this.oshpOrderUpdatePaymentAPIStub=$resource(OSHPURIs.orderSummary.oshpOrderUpdatePaymentStubUri),this.getcustomerTypeAPI=$resource(OSHPURIs.customerType.getcustomerTypeUri),this.oshpGetAppointmentCalendarAPI=$resource(OSHPURIs.appointmentCalendar.oshpGetAppointmentCalendarUri),this.oshpGetAppointmentCalendarAPISuccessStub=$resource(OSHPURIs.appointmentCalendar.oshpGetAppointmentCalendarStubSuccessUri),this.oshpGetAppointmentCalendarAPIFailureStub=$resource(OSHPURIs.appointmentCalendar.oshpGetAppointmentCalendarStubFailureUri),this.iscaptchaNeededAPI=$resource(OSHPURIs.captcha.iscaptchaNeededURI,{},{save:{method:"POST",headers:{"X-Requested-By":"MYATT",Accept:"application/json","Content-Type":"application/json",Pragma:"no-cache","Cache-Control":"no-cache=set-cookie",Expires:"-1",CSP:"active"}}}),this.iscaptchaNeededStub=$resource(OSHPURIs.captcha.iscaptchaNeededStubURI),this.appMarketOrderDetailsNewOrderOneItemAPIStub=$resource(OSHPURIs.appMarketOrderDetails.appMarketOrderDetailsNewOrderOneItemStubUri),this.appMarketOrderDetailsNewOrderMultipleItemAPIStub=$resource(OSHPURIs.appMarketOrderDetails.appMarketOrderDetailsNewOrderMultipleItemStubUri),this.appMarketOrderDetailsNewOrderMultipleItemSameStatusAPIStub=$resource(OSHPURIs.appMarketOrderDetails.appMarketOrderDetailsNewOrderMultipleItemSameStatusStubUri),this.appMarketOrderDetailsChangeProductAPIStub=$resource(OSHPURIs.appMarketOrderDetails.appMarketOrderDetailsChangeProductStubUri),this.appMarketOrderDetailsIncQuantityAPIStub=$resource(OSHPURIs.appMarketOrderDetails.appMarketOrderDetailsIncreaseQuantityStubUri),this.appMarketOrderDetailsDecQuantityAPIStub=$resource(OSHPURIs.appMarketOrderDetails.appMarketOrderDetailsDecreaseQuantityStubUri),this.appMarketOrderDetailsCancelSubsAPIStub=$resource(OSHPURIs.appMarketOrderDetails.appMarketOrderDetailsCancelSubscriptionStubUri),this.oshpAddZoneEventAPI=$resource(OSHPURIs.addZoneEvent.addZoneEventODSURI),this.oshpAddZoneEventAPIStub=$resource(OSHPURIs.addZoneEvent.addZoneEventODSStubURI),this.bopisStoreDataAPI=$resource(OSHPURIs.bopisStoreData.bopisStoreDataURI,{jsonp:"JSON_CALLBACK"},{get:{method:"JSONP"}})},attOSHP.service("OSHPService",["$rootScope","$resource","$q","$log","OSHPURIs","ContentService","$filter",attOSHP.subscriber]),attOSHP.subscriber.prototype.oshpOrderSummaryAPIServices=function(current,useStub,$rootScope){var deferred=this.q.defer(),self=this;self.log.log("use stub check :"+useStub);var success=function(data){if(-1!=document.cookie.indexOf("GNSESS"))try{!function(){var h=document.querySelector("attwc-globalnav-common-header"),event=document.createEvent("Event");event.initEvent("reAuthenticate",!0,!0),null!==h&&h.dispatchEvent(event)}()}catch(e){self.log.info("problem encountered while refreshing glovalnav")}if(angular.isDefined(data)&&angular.isDefined(data.userId)&&"AUTH"==data.searchType){var userID="";if(null!=data.userId&&(userID=data.userId.split("@")[0]),$rootScope.ASLALoggingService(ASLAConfig.AppID_Auth,ASLAConfig.EventType_Auth,userID,"SUCCESS"),HALOCConfig.HALOCFlag){HALOReportingBridge.checkForHaloLoginEventNeeded(null)}}if(data&&null!=data&&void 0!==data.orders&&data.orders.length>0&&"DEFAULT_STATUS"===data.Result.Status&&"SUCCESS"!==data.Result.Status&&(data.Result.Status="SUCCESS",data.Result.Code="S0000"),data&&null!=data&&"SUCCESS"!==data.Result.Status){if(void 0!=data.searchType&&"AUTH"==data.searchType)try{var bestReqString='{"CommonData":{"AppName":"'+bestGnsessAttrs.AppName+'"},"UserId":"'+data.userId+'"}';angular.extend(bestGnsessAttrs,{BestRequest:bestReqString}),setRequestData(bestGnsessAttrs),makeColdAppBestCall()}catch(e){self.log.log("Gnsess call failure"+e)}var errorMsgs=[];if(void 0!==data.Result.Messages&&data.Result.Messages.length>1)for(var i=0;i<data.Result.Messages.length;i++){var addError=!0;if("OM133"!==data.Result.Messages[i].DisplayCode){for(var err={code:data.Result.Messages[i].DisplayCode,type:"SummaryFailure",message:data.Result.Messages[i].DisplayCode+" : "+data.Result.Messages[i].EnglishLongMessage},j=0;j<errorMsgs.length;j++)err.code==errorMsgs[j].code&&(addError=!1);addError&&errorMsgs.push(err)}}if(void 0!==data.Result.Messages)var statusError={code:data.Result.Messages[0].DisplayCode,type:"SummaryFailure",message:data.Result.Messages[0].DisplayCode+" : "+data.Result.Messages[0].EnglishLongMessage,errorMsgs:errorMsgs};else $rootScope.viewlandingPage();deferred.reject(statusError)}deferred.resolve(data)},error=function(error){self.log.log("in  generic error"),self.scope.$broadcast("inProgressEnd"),error.type="ODG_ERROR",error.code="OM100",error.message=self.content.getError("OM100"),self.scope.status=error,deferred.reject(error)};return useStub?(self.log.log("In linestub call"),"1712202115"===current.OrderID?self.oshpOrderMultiDetailsAPIStub.get({},success,error):"1712202116"===current.OrderID?self.oshpOrderUpdatePaymentAPIStub.get({},success,error):"1712202117"===current.OrderID?self.oshpOrderSummaryC2SAPIStub.get({},success,error):"n1"===current.OrderID?self.appMarketOrderDetailsNewOrderOneItemAPIStub.get({},success,error):"nm"===current.OrderID?self.appMarketOrderDetailsNewOrderMultipleItemAPIStub.get({},success,error):"nms"===current.OrderID?self.appMarketOrderDetailsNewOrderMultipleItemSameStatusAPIStub.get({},success,error):"ch"===current.OrderID?self.appMarketOrderDetailsChangeProductAPIStub.get({},success,error):"i"===current.OrderID?self.appMarketOrderDetailsIncQuantityAPIStub.get({},success,error):"d"===current.OrderID?self.appMarketOrderDetailsDecQuantityAPIStub.get({},success,error):"c"===current.OrderID&&self.appMarketOrderDetailsCancelSubsAPIStub.get({},success,error)):current&&!useStub&&(current.orderDetailReq?(current.orderDetailReq.orderNumber&&current.orderDetailReq.zipCode||current.orderDetailReq.ordertoken)&&(self.log.log("API call"),self.oshpUnauthOrderSummaryAPI.save(current.orderDetailReq,success,error)):(self.log.log("API call"),void 0!==current.orderDetailReq?(angular.extend(current.orderDetailReq,{CommonData:oshpData.defaults.CommonData}),self.oshpAuthOrderSummaryAPI.save(current.orderDetailReq,success,error)):self.oshpAuthOrderSummaryAPI.save({CommonData:oshpData.defaults.CommonData},success,error))),deferred.promise},attOSHP.subscriber.prototype.oshpOrderDetailsAPIServices=function(current,useStub){var deferred=this.q.defer(),self=this;self.log.log("use stub check :"+useStub);var success=function(data){if(data&&null!=data&&"SUCCESS"!==data.Result.Status){var statusError={code:data.Result.Messages[0].DisplayCode,type:"DetailFailure",message:data.Result.Messages[0].DisplayCode+" : "+data.Result.Messages[0].EnglishLongMessage};deferred.reject(statusError)}deferred.resolve(data)},error=function(error){self.log.log("in  generic error"),self.scope.$broadcast("inProgressEnd"),error.type="ODG_ERROR",error.code="OM100",error.message=self.content.getError("OM100"),self.scope.status=error,deferred.reject(error)};return useStub?(self.log.log("In linestub call"),"1712202115"===current.OrderID?self.oshpOrderMultiDetailsAPIStub.get({},success,error):"1712202116"===current.OrderID?self.oshpOrderUpdatePaymentAPIStub.get({},success,error):"1712202117"===current.OrderID&&self.oshpOrderSummaryC2SAPIStub.get({},success,error)):current&&!useStub&&current.orderDetailReq&&current.orderDetailReq.OrderNumber&&current.orderDetailReq.ShippingZip&&(self.log.log("API call"),null!=current.AppExtId&&(current.orderDetailReq.AppExtId=current.AppExtId),self.oshpOrderDetailsAPI.save(current.orderDetailReq,success,error)),deferred.promise},attOSHP.subscriber.prototype.updateConsentDateService=function(current,useStub){var deferred=this.q.defer(),self=this;self.log.log("use stub check :"+useStub);var success=function(data){deferred.resolve(data)},error=function(error){self.log.log("in  generic error"),self.scope.$broadcast("inProgressEnd"),error.type="OAG_ERROR",error.code="OM100",error.message=self.content.getError("OM100"),self.scope.status=error,deferred.reject(error)};return current&&!useStub?(self.log.log("API call"),self.oshpUpdateConsentAPI.save(current.updateConsentReq,success,error)):(self.log.log("stub call"),self.oshpUpdateConsentAPISuccessStub.get({},success,error)),deferred.promise},attOSHP.subscriber.prototype.customerTypeAPIService=function(current,useStub,orderObject,identifier,$rootScope){var deferred=this.q.defer(),self=this;self.log.log("use stub check :"+useStub);return current&&!useStub?(self.log.log("API call"),self.getcustomerTypeAPI.save(current.orderDetailReq,function(data){data&&null!=data&&($rootScope.current.customerType=data.customerType,void 0!=data.customerType&&"SMB"===data.customerType&&(sessionStorage.setItem("customerTypeSMB",$rootScope.current.customerType),sessionStorage.setItem("dtmLiabilityType","SMB"),void 0!=ddo&&ddo.setVar("user.account.liabilityType","SMB")),deferred.resolve(data))},function(error){self.log.log("in  generic error"),self.scope.status=error,deferred.reject(error)})):self.log.log("stub call"),deferred.promise},attOSHP.subscriber.prototype.sendVerificationEmail=function(current,useStub){var deferred=this.q.defer(),self=this;self.log.log("use stub check :"+useStub);var success=function(data){deferred.resolve(data)},error=function(error){self.log.log("in  generic error"),self.scope.$broadcast("inProgressEnd"),error.type="OAG_ERROR",error.code="OM100",error.message=self.content.getError("OM100"),self.scope.status=error,deferred.reject(error)};return current&&!useStub?(self.log.log("API call"),self.oshpSendEmailVerificationAPI.save(current.emailDetailsReq,success,error)):(self.log.log("stub call"),self.oshpSendEmailVerificationAPIStub.get({},success,error)),deferred.promise},attOSHP.subscriber.prototype.oshpHandOffServices=function(current,useStub){var deferred=this.q.defer(),self=this;self.log.log("use stub check :"+useStub);var success=function(data){deferred.resolve(data)},error=function(error){self.log.log("in  generic error"),self.scope.$broadcast("inProgressEnd"),error.type="OHG_ERROR",error.code="OM100",error.message=self.content.getError("OM100"),self.scope.status=error;var statusError={code:error.code,type:error.type,message:error.message};deferred.reject(statusError)};return current&&!useStub?current.orderDetailReq&&current.orderDetailReq.orderNumber&&current.orderDetailReq.reqContext&&current.orderDetailReq.zipCode&&current.orderDetailReq.appId?(self.log.log("API call"),self.oshpUnauthOrderSummaryAPI.save(current.orderDetailReq,success,error)):current.orderDetailReq&&current.orderDetailReq.ordertoken&&self.oshpUnauthOrderSummaryAPI.save(current.orderDetailReq,success,error):(self.log.log("stub call"),"1507243810"===current.orderDetailReq.ReqOrderNumber?self.oshpOrderHandoffC2SStubUri.get({},success,error):"n1"===current.orderDetailReq.ReqOrderNumber?self.appMarketOrderDetailsNewOrderOneItemAPIStub.get({},success,error):"nm"===current.orderDetailReq.ReqOrderNumber?self.appMarketOrderDetailsNewOrderMultipleItemAPIStub.get({},success,error):"nms"===current.orderDetailReq.ReqOrderNumber?self.appMarketOrderDetailsNewOrderMultipleItemSameStatusAPIStub.get({},success,error):"ch"===current.orderDetailReq.ReqOrderNumber?self.appMarketOrderDetailsChangeProductAPIStub.get({},success,error):"i"===current.orderDetailReq.ReqOrderNumber?self.appMarketOrderDetailsIncQuantityAPIStub.get({},success,error):"d"===current.orderDetailReq.ReqOrderNumber?self.appMarketOrderDetailsDecQuantityAPIStub.get({},success,error):"c"===current.orderDetailReq.ReqOrderNumber?self.appMarketOrderDetailsCancelSubsAPIStub.get({},success,error):"68818007"!==current.orderDetailReq.ReqOrderNumber&&"68818003"!==current.orderDetailReq.ReqOrderNumber||self.oshpOrderHandoffC2SStubUri2.get({},success,error)),deferred.promise},attOSHP.subscriber.prototype.oshpOrderDetailAPIServices=function(current,useStub){var deferred=this.q.defer(),self=this;self.log.log("use stub check :"+useStub);var success=function(data){deferred.resolve(data)},error=function(error){self.log.log("in  generic error"),self.scope.$broadcast("inProgressEnd"),error.type="ODG_ERROR",error.code="OM100",error.message=self.content.getError("OM100"),self.scope.status=error;var statusError={code:error.code,type:error.type,message:error.message};deferred.reject(statusError)};return current&&!useStub?(self.log.log("API call"),self.oshpOrderDetailsAPI.save(current.orderDetailReq,success,error)):(self.log.log("stub call"),self.oshpOrderDetailsAPIStub.get({},success,error)),deferred.promise},attOSHP.subscriber.prototype.oshpPaymentUpdateAPIServices=function(current,useStub){var deferred=this.q.defer(),self=this;self.log.log("use stub check :"+useStub);var success=function(data){deferred.resolve(data)},error=function(error){self.log.log("in  generic error"),self.scope.$broadcast("inProgressEnd"),error.type="OPG_ERROR",error.code="OM100",error.message=self.content.getError("OM100"),self.scope.status=error;var statusError={code:error.code,type:error.type,message:error.message};deferred.reject(statusError)};return current&&!useStub?(self.log.log("API call"),self.oshpPaymentUpdateAPI.save(current.updateDetails,success,error)):(self.log.log("stub call"),self.oshpPaymentUpdateAPIStub.get({},success,error)),deferred.promise},attOSHP.subscriber.prototype.oshpOrderCancelledAPIServices=function(current,useStub){var deferred=this.q.defer(),self=this,isComs=current.comsOn;self.log.log("use stub check :"+useStub);var success=function(data){deferred.resolve(data)},error=function(error){self.log.log("in  generic error"),self.scope.$broadcast("inProgressEnd"),error.type="OCG_ERROR",error.code="OM100",error.message=self.content.getError("OM100"),self.scope.status=error;var statusError={code:error.code,type:error.type,message:error.message};deferred.reject(statusError)};return current&&!useStub?"COMS"!=isComs||void 0==isComs?(self.log.log("API call"),self.oshpOrderCancelledAPI.save(current.cancelDetails,success,error)):(self.log.log("Comms On API call"),self.oshpOrderCancelledAPIOmni.save(current.cancelDetailsOmni,success,error)):(self.log.log("stub call"),self.oshpOrderCancelledAPIStub.get({},success,error)),deferred.promise},attOSHP.subscriber.prototype.isCaptchaNeeded=function(current,useStub){var deferred=this.q.defer(),self=this;self.log.log("Captcha Called");var success=function(data){data.uri=self.iscaptchaNeededAPI,deferred.resolve(data)},error=function(error){self.log.log("in  generic error"),self.scope.$broadcast("inProgressEnd"),error.type="GenericError",error.code="OSHP0001",self.scope.status=error,deferred.reject(error)},captchaDetails={CommonData:oshpData.defaults.CommonData,app:"ophorder"};return current&&!useStub?(self.log.log("API call"),self.iscaptchaNeededAPI.save(captchaDetails,success,error)):(self.log.log("stub call"),self.iscaptchaNeededStub.get({},success,error)),self.log.log("Captcha Received"),deferred.promise},attOSHP.subscriber.prototype.bopisDataStoreDetails=function(current,useStub){var deferred=this.q.defer(),self=this;return current.StoreId?self.bopisStoreDataAPI.get({storeId:current.StoreId},function(data){deferred.resolve(data)},function(error){deferred.resolve()}):deferred.resolve(),deferred.promise},attOSHP.subscriber.prototype.oshpAddZoneEventAPIServices=function(current,useStub){var deferred=this.q.defer(),self=this;self.log.log("use stub check :"+useStub);var success=function(data){deferred.resolve(data)},error=function(error){self.log.log("in  generic error"),self.scope.$broadcast("inProgressEnd"),error.type="OCG_ERROR",error.code="OM100",error.message=self.content.getError("OM100"),self.scope.status=error;var statusError={code:error.code,type:error.type,message:error.message};deferred.reject(statusError)};return current&&!useStub?(self.log.log("API call"),self.oshpAddZoneEventAPI.save(current.addZoneEvent,success,error)):(self.log.log("stub call"),self.oshpAddZoneEventAPIStub.get({},success,error)),deferred.promise},attOSHP.subscriber.prototype.oshpGetAppointmentCalendarAPIServices=function(order,item,useStub,$rootScope){var deferred=this.q.defer(),self=this,current=$rootScope.current;self.log.log("use stub check :"+useStub);var success=function(data){deferred.resolve(data)},error=function(error){self.log.log("in  generic error"),self.scope.$broadcast("inProgressEnd"),error.type="ODG_ERROR",error.code="OM150",error.message=self.content.getError("OM150"),self.scope.status=error,deferred.reject(error)},formattedDate=self.filter("date")($rootScope.formatDate(item.appointment.appointmentDate),"MM/dd/yyyy"),productType=$rootScope.setNonWLSItemName(item.productName),calendarRequest={CommonData:oshpData.defaults.CommonData,orderNumber:order.orderNumber,productType:productType,planType:item.packageName,appointmentDate:formattedDate,installStartTime:item.appointment.installStartTime,installEndTime:item.appointment.installEndTime};return useStub?self.oshpGetAppointmentCalendarAPISuccessStub.get({},success,error):current&&!useStub&&self.oshpGetAppointmentCalendarAPI.save(calendarRequest,success,error),deferred.promise};